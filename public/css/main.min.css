@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Regular.woff);font-style:normal;font-weight:400;font-display:swap}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Light.woff);font-style:normal;font-weight:300;font-display:swap}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Medium.woff);font-style:normal;font-weight:500;font-display:swap}body{background:#fff;font-family:"Montserrat";color:#40474e}h1,h2,h3,h4,h5,h6,p{margin-top:0;margin-bottom:0}.list{list-style:none;margin:0;padding:0}.link{text-decoration:none}img{display:block;max-width:100%;height:auto}.title{font:20px/1.21 "Montserrat",sans serif;position:relative;letter-spacing:.1em;text-transform:uppercase}.container{padding-left:15px;padding-right:15px;margin:0 auto}.button,.icon-button{text-transform:uppercase;cursor:pointer}.button{font:14px/1.15 Gotham Pro;background:0 0;padding:20px 45px 18px;color:#6b97bb;border:1px solid #6b97bb}.icon-button{font:14px/1.21 "Montserrat",sans serif;display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;letter-spacing:.05em;color:#fff}.icon-white{fill:#fff}.header__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__button{background:#fff;padding:13px 35px 11px;border:1px solid #aa182c;cursor:pointer}.site-nav{display:-webkit-box;display:-ms-flexbox;display:flex}.site-nav__link{font:16px/1.6 "Montserrat",sans serif;text-transform:uppercase;color:#40474e}.site-nav__item--accent,.site-nav__link:hover{color:#aa182c}.site-nav__item:not(:last-child){margin-right:42px}.service{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.service__item:not(:last-child){margin-right:13px}.service__icon{fill:#40474e}.service__item--heart{position:relative}.service__icon:focus,.service__icon:hover{fill:#aa182c}.favourite{background:#aa182c;position:absolute;top:-4px;right:-7px;display:block;width:12px;height:13px;color:#fff;-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg);text-align:center;font-size:10px}.select-css{font:16px/1.6 "Montserrat",sans serif;background:url(../img/arrow-drop-down.svg) no-repeat right -1px top 50%/.95em auto;display:block;border:0;appearance:none;-moz-appearance:none;-webkit-appearance:none;padding-right:10px;text-transform:uppercase;color:#40474e}.select-css:focus,.select-css:hover{outline:0}.select-css option:checked{display:none}.hero,.hero__container,.hero__image{position:relative}.hero__image{background:linear-gradient(rgba(5,7,8,.45),rgba(5,7,8,.45)),url(../img/hero-image.jpg);padding-top:385px;padding-bottom:179px}.hero__title{font:86px/1 "Montserrat",sans serif;padding-top:65px;margin-bottom:28px;color:#fff;text-transform:uppercase}.hero__text{font:30px/1.4 "Montserrat",sans serif;color:#fff}.social{position:absolute;right:0;top:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.social__item:not(:last-child){margin-bottom:20px}.projects__container{padding-bottom:433px}.projects__wrapper{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex}.projects__title{margin-bottom:80px}.projects__title::after{background:#8d9aa5;position:absolute;left:224px;bottom:10px;content:"";display:block;width:200px;height:2px;border-radius:2px}.projects__image{position:absolute;right:627px;max-width:1070px}.projects__box{position:relative;max-width:540px;margin-right:0;margin-left:auto}.projects__box--buttons{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.projects__button--arrow{background:#fff;padding:20px 15px 18px;border:1px solid #98a4ae}.projects__button--left{margin-right:10px}.projects__button--right{fill:#aa182c}.projects__subtitle{font:44px/1.3 "Montserrat",sans serif;margin-top:85px;margin-bottom:40px}.projects__text{font:300 18px/1.4 "Montserrat",sans serif}.projects__text:not(:last-child){margin-bottom:15px}.projects__gallery{position:absolute;left:-180px;bottom:-345px;display:-webkit-box;display:-ms-flexbox;display:flex}.projects__gallery--image:not(last-child){margin-right:40px}.blog{background:#e5e5e5}.blog__wrapper{margin-bottom:80px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.blog__title::after{background:#8d9aa5;position:absolute;left:319px;bottom:10px;content:"";display:block;width:200px;height:2px;border-radius:2px}.blog__gallery,.blog__item,.blog__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.blog__item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:25%;padding:10px}.blog__item:not(:last child){margin-right:15px}.blog__item:focus,.blog__item:hover{padding:8px;border:2px solid #cfdae3}.blog__box{-webkit-box-flex:1;-ms-flex:1;flex:1;max-width:380px;padding:24px 20px;border:2px solid #cfdae3;border-top:none}.blog__thumb{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:24px}.blog__subtitle{font:14px/1.3 "Montserrat",sans serif;padding:5px 10px;text-transform:uppercase}.blog__subtitle--news{background:#cfdae3}.blog__subtitle--article{background:#d9d4d4}.blog__date{font:14px/1.3 "Montserrat",sans serif;text-transform:uppercase}.blog__link{font:20px/1.2 "Montserrat",sans serif;color:#40474e}.blog__link:focus,.blog__link:hover{color:#6b97bb}.blog__statistics,.blog__subitem{display:-webkit-box;display:-ms-flexbox;display:flex}.blog__statistics{margin-top:15px}.blog__subitem{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.blog__subitem:not(:last-child){margin-right:15px}.blog__counter{margin-left:5px;font-size:12px;color:#6a737a}.instagram{background:#cfdae3}.instagram__container{margin:0 auto}.instagram__gallery{display:grid;grid-template-columns:repeat(3,1fr);grid-auto-rows:minmax(280px,auto);grid-gap:20px}.instagram__item--last,.instagram__link--icon{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.instagram__link--icon{background:#40474e;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:50px;height:50px;border-radius:50px}.instagram__item--last{background:#fff;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding-top:70px}.instagram__link{font:24px/1.2 "Montserrat",sans serif;margin-top:15px;margin-bottom:18px;color:#40474e}.instagram__button{font:14px/1.6 "Montserrat",sans serif;background:#6b97bb;padding:15px 32px 13px;border:0;text-transform:uppercase;color:#f9f9fa;cursor:pointer}.instagram__title{width:410px;margin:0 auto 80px}.instagram__title::after,.instagram__title::before{background:#8d9aa5;position:absolute;content:"";display:block;width:200px;height:2px;border-radius:2px}.instagram__title::after{left:420px;bottom:10px}.instagram__title::before{left:-224px;bottom:10px}.form{background:#fff;position:absolute;right:67px;top:85px;padding:76px 140px 100px}.form__section{background:#e5e5e5}.form__container{position:relative}.form__title{font:44px/1.3 "Montserrat",sans serif;margin-bottom:16px;text-align:center}.form__text{font:300 18px/1.4 "Montserrat",sans serif;margin-bottom:30px}.form__input{font:300 16px/1.4 "Montserrat",sans serif;padding:13px 20px;margin-bottom:17px;display:block;width:100%;border:1px solid #cfdae3;color:#98a4ae}.form__button{background:#6b97bb;padding:20px 22px 17px 30px;border:0}.form__message{resize:none}.footer{background:#6a737a}.footer__container{padding-top:80px;padding-bottom:20px}.footer__wrapper{display:grid;grid-template-columns:repeat(5,1fr) 262px}.footer__column--double{display:grid;grid-auto-rows:minmax(140px,auto)}.footer__item:not(:last-child){margin-bottom:9px}.footer__button--arrow{background:#6b97bb;padding:20px 20px 17px;margin-bottom:20px;border:0}.footer__button--download{background:0 0;padding:20px 20px 17px;border:1px solid #fff}.footer__social{margin-top:40px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;max-width:130px}.footer__title{font:18px/1.4 "Montserrat",sans serif;margin-bottom:15px;color:#fff}.footer__brand,.footer__link{font:14px/1.2 "Montserrat",sans serif;color:#fff}.basement{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.basement__language{font:14px/1.2 "Montserrat",sans serif;background:0 0;border:0;color:rgba(255,255,255,.4);letter-spacing:.05em;text-transform:uppercase}.basement__language:focus,.basement__language:hover{color:#fff}.basement__rights{font:14px/1.2 "Montserrat",sans serif;color:#fff}.basement__text{font-size:12px;line-height:1.33;color:#fff}.basement__development{display:-webkit-box;display:-ms-flexbox;display:flex}.basement__icon{margin-left:4px}.separator{color:#fff}@media screen and (min-width:1500px){.container{max-width:1500px}.section{padding-top:120px;padding-bottom:120px}.instagram__container{max-width:880px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */